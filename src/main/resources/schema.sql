DROP TABLE IF EXISTS Users CASCADE;
DROP TABLE IF EXISTS Friends CASCADE;
DROP TABLE IF EXISTS Ratings CASCADE;
DROP TABLE IF EXISTS Films CASCADE;
DROP TABLE IF EXISTS Genres CASCADE;
DROP TABLE IF EXISTS FilmGenre CASCADE;
DROP TABLE IF EXISTS Likes CASCADE;

CREATE TABLE IF NOT EXISTS Users(
   userId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   email varchar(200) NOT NULL,
   login varchar(200) NOT NULL,
   name varchar(200),
   birthday date
);
CREATE TABLE IF NOT EXISTS Friends(
  userId INTEGER REFERENCES Users(userId),
  friendId INTEGER REFERENCES Users(userId),
  status boolean,
  CONSTRAINT unique_field UNIQUE (userId, friendId)
);
CREATE TABLE IF NOT EXISTS Ratings(
    ratingId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) NOT NULL
);
CREATE TABLE IF NOT EXISTS Films(
    filmId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) NOT NULL,
    description varchar(200) NOT NULL,
    releaseDate date,
    duration int,
    rate int,
    ratingId INTEGER REFERENCES Ratings(ratingId)
);
CREATE TABLE IF NOT EXISTS Genres(
    genreId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) NOT NULL
);
CREATE TABLE IF NOT EXISTS FilmGenre(
    filmId INTEGER REFERENCES Films(filmId) ON DELETE CASCADE,
    genreId INTEGER REFERENCES Genres(genreId)
);
CREATE TABLE Likes(
     filmId INTEGER REFERENCES Films(filmId),
     userId INTEGER REFERENCES Users(userId)
);